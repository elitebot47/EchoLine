generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid()) @db.Uuid
  name     String
  email    String  @unique
  image    String?
  password String?

  rooms        RoomParticipant[]
  messagesFrom Message[]         @relation("MessagesFrom")
  messagesTo   Message[]         @relation("MessagesTo")

  @@index([name])
}

model Room {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  type      RoomType
  updatedAt DateTime @updatedAt

  participants RoomParticipant[]
  messages     Message[]
}

model RoomParticipant {
  id     String @id @default(uuid()) @db.Uuid
  user   User   @relation(fields: [userId], references: [id])
  userId String @db.Uuid
  room   Room   @relation(fields: [roomId], references: [id])
  roomId String @db.Uuid

  @@unique([userId, roomId])
  @@index([roomId])
  @@index([userId])
  @@index([roomId, userId])
}

model Message {
  id          String      @id @default(uuid()) @db.Uuid
  from        User        @relation("MessagesFrom", fields: [fromId], references: [id])
  fromId      String      @db.Uuid
  to          User        @relation("MessagesTo", fields: [toId], references: [id])
  toId        String      @db.Uuid
  fileName    String?
  fileSize    Int?
  fileType    String?
  createdAt   DateTime    @default(now())
  content     String
  contentType ContentType
  updatedAt   DateTime    @updatedAt
  room        Room        @relation(fields: [roomId], references: [id])
  roomId      String      @db.Uuid
  status      StatusType  @default(SENT)

  @@index([roomId, createdAt(sort: Desc)])
  @@index([fromId, createdAt(sort: Desc)])
  @@index([roomId, fromId])
  @@index([createdAt(sort: Desc)])
  @@index([status, createdAt])
}

enum StatusType {
  SENDING
  SENT
  DELIVERED
  READ
}

enum RoomType {
  private
  group
}

enum ContentType {
  text
  image
  video
  link
  document
}
